apiVersion: v1
kind: Template
metadata:
  name: topological-inventory-api
objects:
- apiVersion: v1
  kind: Secret # For ephemeral/local environment
  metadata:
    name: topological-inventory-api-secrets
    labels:
      app: topo-api
  stringData:
    encryption-key: "${ENCRYPTION_KEY}"
    secret-key: "${SECRET_KEY}"
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: topo-api
  spec:
    envName: ${ENV_NAME}
    deployments:
    - name: svc
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        public:
          enabled: true # port 8000 is default in ClowdEnvironment
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        env:
        - name: APP_NAME
          value: ${APP_NAME}
        - name: DB_POOL_SIZE
          value: ${DB_POOL_SIZE}
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: topological-inventory-api-secrets
              key: encryption-key
        - name: RAILS_LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: PATH_PREFIX
          value: ${PATH_PREFIX}
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: topological-inventory-api-secrets
              key: secret-key
        - name: SOURCES_HOST
          value: ${SOURCES_HOST}
        - name: SOURCES_PORT
          value: ${SOURCES_PORT}
        - name: SOURCES_SCHEME
          value: ${SOURCES_SCHEME}
        readinessProbe:
          tcpSocket:
            port: 8000
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 120
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
    database:
      name: topological-inventory # looking for rds: sources-db resource in app-interface
      version: 12
    kafkaTopics:
    - topicName: platform.topological-inventory.operations-ansible-tower
      partitions: 3
      replicas: 3
    - topicName: platform.topological-inventory.task-output-stream
      partitions: 3
      replicas: 3
- apiVersion: v1
  kind: Service
  metadata:
    name: topo-api-transitional
    labels:
      app: topo-api
      pod: topo-api-svc
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8000
      name: weblegacy
    selector:
      pod: topo-api-svc
parameters:
- description: Application name to be used in request paths.
  displayName: Application Name
  name: APP_NAME
  value: topological-inventory
- name: CPU_LIMIT
  value: 200m
- name: CPU_REQUEST
  value: 100m
- name: DB_POOL_SIZE
  displayName: Database Pool size
  description: Database pool configuration in DATABASE_URL env
  value: "5"
- name: ENCRYPTION_KEY
  displayName: Encryption Key (Ephemeral)
  required: true
  description: Encryption Key for Passwords
  from: "[a-zA-Z0-9]{43}"
  generate: expression
- description: Clowder ENV
  name: ENV_NAME
  required: true
- description: Image
  name: IMAGE
  value: quay.io/cloudservices/topological-inventory-api
- description: Image tag
  name: IMAGE_TAG
  required: true
- name: LOG_LEVEL
  value: WARN
- name: MEMORY_LIMIT
  value: 1Gi
- name: MEMORY_REQUEST
  value: 500Mi
- description: The number of replicas to use for the prometheus deploy
  name: MIN_REPLICAS
  value: '1'
- description: Base path for the API
  displayName: Path Prefix
  name: PATH_PREFIX
  value: api
- name: SECRET_KEY
  displayName: Secret Key (Ephemeral)
  required: true
  description: Rails SECRET_KEY_BASE
  from: "[a-f0-9]{128}"
  generate: expression
- description: Host to use for the Sources service URL.
  displayName: Sources Service Host
  name: SOURCES_HOST
  required: true
  value: sources-api
- description: Port to use for the Sources service URL.
  displayName: Sources Service Port
  name: SOURCES_PORT
  value: '8000'
- description: Scheme to use for the Sources service URL.
  displayName: Sources Service Scheme
  name: SOURCES_SCHEME
  value: http
